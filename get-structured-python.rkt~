#lang plai

(require "python-syntax.rkt")
(require racket/match
         racket/list)

#|

Python parses as a JSON structure that we export from Python's ast
module.  You should use this file to turn it into a plai-typed data
structure that you define in python-syntax.rkt

|#

(define (get-structure pyjson)
  (match pyjson
    [(hash-table ('nodetype "Module") ('body expr-list))
     (PySeq (map get-structure expr-list))]
    [(hash-table ('nodetype "Expr") ('value expr))
     (get-structure expr)]
    [(hash-table ('nodetype "Call")
                 ('keywords keywords) ;; ignoring keywords for now
                 ('kwargs kwargs)     ;; ignoring kwargs for now
                 ('starargs starargs) ;; ignoring starargs for now
                 ('args args-list)
                 ('func func-expr))
     (PyApp (get-structure func-expr)
            (map get-structure args-list))]
    [(hash-table ('nodetype "Name")
                 ('ctx _)        ;; ignoring ctx for now
                 ('id id))
     (match id
       ["True" (PyTrue)]
       ["False" (PyFalse)]
       [_  (PyId (string->symbol id))])]
    [(hash-table ('nodetype "If")
                 ('test test)
                 ('body body)
                 ('orelse orelse))
     (PyIf (get-structure test) 
           (PySeq (map get-structure body))
           (PySeq (map get-structure orelse)))]
    [(hash-table ('nodetype "Num")
                 ('n n))
     (PyNum n)]
    
    [(hash-table ('nodetype "BinOp")
                 ('op op)
                 ('left l)
                 ('right r))
     (PyBinOp (get-structure op) (get-structure l) (get-structure r))]
    [(hash-table ('nodetype "Add")) '+]
    [(hash-table ('nodetype "Sub")) '-]
    [(hash-table ('nodetype "Div")) '/]
    [(hash-table ('nodetype "Mult")) '*]
    [(hash-table ('nodetype "Pow")) '**]
    [a (begin (display "\nwhat is this: ") (display a) (display "\n") (PyPass))]
    [_ (error 'parse "Haven't handled a case yet")]))

(define (get-structured-python pyjson)
  (begin ;(display pyjson)
         (get-structure pyjson)))

